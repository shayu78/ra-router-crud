{"version":3,"sources":["components/List/List.jsx","components/Post/Post.jsx","components/ListItem/ListItem.jsx","hooks/useFetch.jsx","contexts/PostsContext.js","components/PostsWidget/PostsWidget.jsx","components/PostAdd/PostAdd.jsx","components/PostView/PostView.jsx","components/PostEdit/PostEdit.jsx","components/PostProvider/PostProvider.jsx","components/Page404/Page404.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["List","props","className","data","children","Post","item","Fragment","id","moment","duration","diff","created","humanize","content","ListItem","to","useFetch","action","url","opts","useState","setData","loading","setLoading","error","setError","useEffect","a","fetch","response","ok","Error","statusText","status","json","message","setTimeout","fetchData","PostsContext","React","createContext","PostsWidget","setPosts","useContext","process","method","map","DEFAULT_FORM_VALUE","PostAdd","history","form","setForm","setAction","headers","body","JSON","stringify","goBack","onClick","onSubmit","event","preventDefault","trim","length","name","onChange","target","value","prev","required","PostView","match","posts","useRef","Number","params","post","find","current","push","PostEdit","PostProvider","Provider","Page404","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.497d5bef.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function List(props) {\r\n  const { className, data } = props;\r\n\r\n  return (\r\n    <ul className={className}>\r\n      {props.children(data)}\r\n    </ul>\r\n  );\r\n}\r\n\r\nList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  className: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport \"moment/locale/ru\";\r\n\r\nexport default function Post(props) {\r\n  const { item } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"post__user__date__wrapper\">\r\n        <div className=\"post__user__icon\">{item.id}</div>\r\n        <div className=\"post__username__publish\">\r\n          <span className=\"post__username\">Ivan Petrov</span>\r\n          <span className=\"post__publish\">{moment.duration(moment().diff(moment(item.created))).humanize()}</span>\r\n        </div>\r\n      </div>\r\n      <h3 className=\"post__content\">{item.content}</h3>\r\n    </React.Fragment >\r\n  );\r\n}\r\n\r\nPost.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Post from '../Post/Post';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ListItem(props) {\r\n  const { className, item } = props;\r\n\r\n  return (\r\n    <li className={className}>\r\n      <Link key={item.id} className='list__item__link' to={`/posts/${item.id}`}>\r\n        <Post item={item} />\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n\r\nListItem.propTypes = {\r\n  className: PropTypes.string,\r\n  item: PropTypes.object.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\n\nexport default function useFetch(action, url, opts = null) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!action) return;\n\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      setData(null);\n      try {\n        const response = await fetch(url, opts);\n        if (!response.ok) throw new Error(response.statusText);\n        if (response.status === 204) setData([]);\n        else {\n          const data = await response.json();\n          setData(data);\n        }\n      } catch (e) {\n        setError(`Ошибка загрузки данных с ресурса ${url} (${e.message})`);\n        setTimeout(() => setError(null), 3000);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url, action]);\n\n  return [{ data, loading, error }];\n}\n","import React from 'react';\n\nconst PostsContext = React.createContext();\n\nexport default PostsContext;\n","import React, { useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport List from '../List/List';\r\nimport ListItem from '../ListItem/ListItem';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport PostsContext from '../../contexts/PostsContext';\r\n\r\nexport default function PostsWidget() {\r\n  const { setPosts } = useContext(PostsContext);\r\n  const url = `${process.env.REACT_APP_SERVER_URL}posts`;\r\n  const opts = { method: 'GET' };\r\n  const [{ data, loading, error }] = useFetch(true, url, opts);\r\n\r\n  useEffect(() => {\r\n    if (data) setPosts(data);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"posts__header\">\r\n        <Link to=\"/posts/new\" className=\"action__button\">Создать пост</Link>\r\n      </div>\r\n      {loading && <span className=\"loading\">Загрузка данных, подождите...</span>}\r\n      {error && <span className=\"error\">{error}</span>}\r\n      {data && <List className='list__items' data={data}>\r\n        {() => data.map((item) =>\r\n          <ListItem key={item.id} className='list__item' item={item} />\r\n        )}\r\n      </List>}\r\n    </React.Fragment >\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport useFetch from '../../hooks/useFetch';\r\n\r\nconst DEFAULT_FORM_VALUE = {\r\n  content: '',\r\n};\r\n\r\nexport default function PostAdd(props) {\r\n  const { history } = props;\r\n  const [form, setForm] = useState(DEFAULT_FORM_VALUE);\r\n  const [action, setAction] = useState(false);\r\n\r\n  const url = `${process.env.REACT_APP_SERVER_URL}posts`;\r\n  const opts = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ \"id\": 0, \"content\": form.content }),\r\n  };\r\n  const [{ data, loading, error }] = useFetch(action, url, opts);\r\n\r\n  useEffect(() => {\r\n    if (action && data) history.goBack();\r\n    if (error) setAction(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [action, data, error]);\r\n\r\n  const onClose = () => history.goBack();\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!form.content.trim().length) setForm(DEFAULT_FORM_VALUE);\r\n    else setAction(true);\r\n  }\r\n\r\n  const onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <span className=\"loading\">Сохранение данных, подождите...</span>}\r\n      {error && <span className=\"error\">{error}</span>}\r\n      <div className=\"post__wrapper\">\r\n        <div className=\"post__header\">\r\n          <span className=\"post__header__text\">Добавить публикацию</span>\r\n          <i className=\"post__close material-icons\" onClick={onClose}>close</i>\r\n        </div>\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n          <div className=\"form__data\">\r\n            <div className=\"post__user__icon\"></div>\r\n            <textarea className=\"form__ta\" name='content' onChange={onInputChange} value={form.content} required />\r\n          </div>\r\n          <div className=\"button__wrapper\">\r\n            <button className=\"action__button\">Опубликовать</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment >\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect, useRef } from 'react';\r\nimport PostsContext from '../../contexts/PostsContext';\r\nimport useFetch from '../../hooks/useFetch';\r\nimport moment from 'moment';\r\nimport \"moment/locale/ru\";\r\n\r\nexport default function PostView(props) {\r\n  const { match, history } = props;\r\n  const { posts } = useContext(PostsContext);\r\n  const [action, setAction] = useState(false);\r\n  const id = useRef(Number(match.params.id));\r\n  const post = posts.find((value) => value.id === id.current);\r\n\r\n  const url = `${process.env.REACT_APP_SERVER_URL}posts/${id.current}`;\r\n  const opts = {\r\n    method: 'DELETE',\r\n  };\r\n  const [{ data, loading, error }] = useFetch(action, url, opts);\r\n\r\n  useEffect(() => {\r\n    if (action && data) history.goBack();\r\n    if (error) setAction(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [action, data, error]);\r\n\r\n  const onDelete = () => setAction(true);\r\n\r\n  const onEdit = () => history.push(`/posts/edit/${id.current}`);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <span className=\"loading\">Удаление данных, подождите...</span>}\r\n      {error && <span className=\"error\">{error}</span>}\r\n      {post && <div className=\"post__view\">\r\n        <div className=\"post__user__date__wrapper\">\r\n          <div className=\"post__user__icon\">{post.id}</div>\r\n          <div className=\"post__username__publish\">\r\n            <span className=\"post__username\">Ivan Petrov</span>\r\n            <span className=\"post__publish\">{moment.duration(moment().diff(moment(post.created))).humanize()}</span>\r\n          </div>\r\n        </div>\r\n        <h3 className=\"post__content\">{post.content}</h3>\r\n        <div className=\"button__wrapper\">\r\n          <button className=\"action__button\" onClick={onEdit}>Изменить</button>\r\n          <button className=\"action__button red__bg\" onClick={onDelete}>Удалить</button>\r\n        </div>\r\n      </div>}\r\n    </React.Fragment >\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport PostsContext from '../../contexts/PostsContext';\r\nimport useFetch from '../../hooks/useFetch';\r\n\r\nexport default function PostEdit(props) {\r\n  const { match, history } = props;\r\n  const { posts, setPosts } = useContext(PostsContext);\r\n  const [action, setAction] = useState(false);\r\n  const id = useRef(Number(match.params.id));\r\n  const [form, setForm] = useState(posts.find((value) => value.id === id.current));\r\n\r\n  const url = `${process.env.REACT_APP_SERVER_URL}posts`;\r\n  const opts = {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ id: id.current, \"content\": form.content }),\r\n  };\r\n  const [{ data, loading, error }] = useFetch(action, url, opts);\r\n\r\n  useEffect(() => {\r\n    if (action && data) {\r\n      setPosts((prev) => prev.map((value) => value.id === id.current ? { ...value, content: form.content } : value));\r\n      history.goBack();\r\n    }\r\n    if (error) setAction(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [action, data, error]);\r\n\r\n  const onClose = () => history.goBack();\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!form.content.trim().length) setForm({ id: id.current, content: '' });\r\n    else setAction(true);\r\n  }\r\n\r\n  const onInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <span className=\"loading\">Сохранение данных, подождите...</span>}\r\n      {error && <span className=\"error\">{error}</span>}\r\n      <div className=\"post__wrapper\">\r\n        <div className=\"post__header\">\r\n          <span className=\"post__header__text\">Редактировать публикацию</span>\r\n          <i className=\"post__close material-icons\" onClick={onClose}>close</i>\r\n        </div>\r\n        <form className=\"form\" onSubmit={onSubmit}>\r\n          <div className=\"form__data\">\r\n            <div className=\"post__user__icon\">{form.id}</div>\r\n            <textarea className=\"form__ta\" name='content' onChange={onInputChange} value={form.content} required />\r\n          </div>\r\n          <div className=\"button__wrapper\">\r\n            <button className=\"action__button\">Сохранить</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment >\r\n  );\r\n}\r\n","import React, { useState } from 'react';\nimport PostsContext from '../../contexts/PostsContext';\n\nexport default function PostProvider(props) {\n  const [posts, setPosts] = useState([]);\n\n  return (\n    <PostsContext.Provider value={{ posts, setPosts }}>\n      {props.children}\n    </PostsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default function Page404() {\n  return (\n    <div className=\"container__404\">\n      <h1 className=\"header__404\">404</h1>\n      <p className=\"text__404\">Page not found</p>\n      <Link className='main__404__link' to={'/'}>Main Page</Link>\n    </div>\n  )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport PostsWidget from './components/PostsWidget/PostsWidget';\nimport PostAdd from './components/PostAdd/PostAdd';\nimport PostView from './components/PostView/PostView';\nimport PostEdit from './components/PostEdit/PostEdit';\nimport PostProvider from './components/PostProvider/PostProvider';\nimport Page404 from './components/Page404/Page404';\n\nfunction App() {\n  return (\n    <PostProvider>\n      <Router>\n        <div className=\"component__wrapper\">\n          <Switch>\n            <Route path=\"/posts/new\" exact component={PostAdd} />\n            <Route path=\"/posts/edit/:id\" exact component={PostEdit} />\n            <Route path=\"/posts/:id\" exact component={PostView} />\n            <Route path=\"/\" exact component={PostsWidget} />\n            <Route path=\"*\" component={Page404} />\n          </Switch>\n        </div>\n      </Router>\n    </PostProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}